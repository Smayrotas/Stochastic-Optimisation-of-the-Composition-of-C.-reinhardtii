function y=GroupToFBACoef(x,s,model,FType)

%This could disappear by automating the process of converting from and to
%g/gDCW

aOverSigmaA=[0.249012172141088, 0.0153267088265165, 0.117312401097579,...
    0.618348717934816, 1.0, 1.0, 0.178202341508659, 0.181561974610339, 0.306858082606304,...
    0.333377601274698, 1.0, 0.0101688262349436, 0.0101688262349436, 0.0101687704885965,...
    0.0101688091686417, 0.0101688817738979, 0.0101688817738979, 0.0101688262349436, 0.0101688649473714,...
    0.012638825754619, 0.00218749886695542, 0.00218749886695542, 0.00291667827230754, 0.00145832975338161,...
    0.00145832975338161, 0.024305277974752, 0.00218748480225618, 0.00218748480225618, 0.00388887934235097,...
    0.00194442710561801, 0.00194442710561801, 0.0174998784180495, 0.00388889689149208, 0.00534719864708983,...
    0.00534719864708983, 0.00194444467676058, 0.000451952399595786, 0.000451952399595786, 0.00650806255688931,...
    0.0227783462472062, 0.0122025873775234, 0.000451956715270327, 0.000451956715270327, 0.00122027374544651, 0.00244056072677959, 0.00162702789383372, 0.000451956715270327, 0.000451956715270327, 0.00122027374544651, 0.00244056072677959, 0.00162702789383372, 0.000451953239054262, 0.000451953239054262, 0.00244052862005285, 0.00976216736300234, 0.000451948676724162, 0.00203380060564966, 0.00203380060564966, 0.00650814701890472, 0.00244053613021728, 0.0012044896035521, 0.00120449614814967, 0.00120449614814967, 0.00240900545590398, 0.00240898652464262, 0.00240898652464262, 0.019271997917072, 0.00120449614814967, 0.00240901868648775, 0.019271997917072, 0.019271997917072, 0.16863091184022, 0.0127835604627205, 0.00172086390844314, 0.0138485706255326, 0.00384679453127299, 0.0182951494550803, 0.000746734840839423, 0.000554398468335768, 2.26283285102856e-05, 0.00115404475402457, 0.00364186452183505, 0.00267071531352002, 0.00364186452183505, 0.00267071531352002, 0.00437020291795471, 0.0199088113652289, 0.00437022688505024, 0.00728375163745311, 0.0154503411630564, 0.00315315971080027, 0.00315315971080027, 0.00472970557810138, 0.00504504466819498, 0.00880948646541746, 0.00880952046907057, 0.00880956266103487, 0.00880956266103487, 0.00880954464935946, 0.00880948396236106, 0.00880948646541746, 0.00880952046907057, 0.00880956266103487, 0.00880956266103487, 0.00880954464935946, 0.00880948396236106, 0.00880952046907057, 0.00880955232804605, 0.00880959325893415, 0.00880959325893415, 0.00880957595874836, 0.00880951727447531, 0.00880956266103487, 0.00880959325893415, 0.00880963437658196, 0.00880963437658196, 0.00880961722475018, 0.00880955849999684, 0.00880956266103487, 0.00880959325893415, 0.00880963437658196, 0.00880963437658196, 0.00880961722475018, 0.00880955849999684, 0.00880956266103487, 0.00880959325893415, 0.00880963437658196, 0.00880963437658196, 0.00880961722475018, 0.00880955849999684, 0.00880956266103487, 0.00880959325893415, 0.00880963437658196, 0.00880963437658196, 0.00880961722475018, 0.00880955849999684, 0.0931668930548388, 0.0202992229966877, 0.260867300553549, 0.13194494947847, 0.246799269184763, 0.114699774522269, 0.0729907656050799, 0.059231824604343, 1.4006740053492e-06, 0.122618565907914, 0.395618540582814, 0.13230708398634, 0.0, 0.045048000957238, 0.00147566270560964, 0.0596294694201721, 0.0, 0.000944864511213057, 0.021568132079504, 0.0543197400520842, 0.0134459243786924, 0.0, 0.028167263260017, 0.0273438121445397, 0.0108798585463794, 0.049327986943678, 0.00124369766473265, 0.00110340534091532, 0.0349565908441509, 0.377758695163791, 0.409315475137108, 0.2129258296991, 0.332357355038334, 0.334193591178034, 0.333449053783632];
metIds=[792.0, 843.0, 1043.0, 1510.0, 487.0, 489.0, 688.0, 553.0, 568.0, 608.0,...
    849.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 581.0, 582.0,...
    583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0,...
    595.0, 596.0, 597.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1254.0, 1256.0, 1279.0, 1281.0, 1287.0, 1289.0, 1295.0, 1297.0, 1299.0, 1307.0, 1308.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1501.0, 1503.0, 1505.0, 1506.0, 1507.0, 1527.0, 1528.0, 1529.0, 1530.0, 1531.0, 1532.0, 1533.0, 1534.0, 1535.0, 1536.0, 1537.0, 1538.0, 1539.0, 1540.0, 1541.0, 1542.0, 1543.0, 1544.0, 1545.0, 1546.0, 1547.0, 1548.0, 1549.0, 1550.0, 1551.0, 1552.0, 1553.0, 1554.0, 1555.0, 1556.0, 1557.0, 1558.0, 1559.0, 1560.0, 1561.0, 1562.0, 1563.0, 1564.0, 1565.0, 1566.0, 1567.0, 1568.0, 296.0, 385.0, 469.0, 1020.0, 1026.0, 1160.0, 1688.0, 1702.0, 1448.0, 358.0, 398.0, 399.0, 405.0, 419.0, 534.0, 821.0, 825.0, 934.0, 970.0, 1002.0, 1028.0, 1055.0, 1323.0, 1402.0, 1481.0, 1590.0, 1632.0, 1641.0, 1683.0, 529.0, 877.0, 1681.0, 283.0, 458.0, 1364.0];
Mr=[180.15348, 75.0658, 180.15348, 48659.59488, 893.48698, 907.4701, 478.130906, 487.145066, 463.119966, 503.144066, 92.09262, 1078.5384, 1078.5384, 1076.52252, 1074.50664, 1080.55428, 1080.55428, 1078.5384, 1076.52252, 919.2239, 917.20802, 917.20802, 915.19214, 913.17626, 913.17626, 917.20802, 915.19214, 915.19214, 913.17626, 911.16038, 911.16038, 915.19214, 911.16038, 909.1445, 909.1445, 907.12862, 738.12952, 738.12952, 736.11364, 734.09776, 732.08188, 764.1668, 764.1668, 762.15092, 760.13504, 758.11916, 764.1668, 764.1668, 762.15092, 760.13504, 758.11916, 762.15092, 762.15092, 760.13504, 758.11916, 756.10328, 760.13504, 760.13504, 756.10328, 754.0874, 755.06942, 753.05354, 753.05354, 751.03766, 749.02178, 749.02178, 747.0059, 753.05354, 749.02178, 747.0059, 747.0059, 744.99002, 837.064002, 837.064002, 742.014602, 739.998722, 739.998722, 737.982842, 739.998722, 737.982842, 737.982842, 749.003142, 746.987262, 749.003142, 746.987262, 746.987262, 744.971382, 744.971382, 742.955502, 794.10308, 820.14036, 820.14036, 818.12448, 816.1086, 833.3551, 861.40826, 859.39238, 859.39238, 855.36062, 853.34474, 833.3551, 861.40826, 859.39238, 859.39238, 855.36062, 853.34474, 861.40826, 889.46142, 887.44554, 887.44554, 883.41378, 881.3979, 859.39238, 887.44554, 885.42966, 885.42966, 881.3979, 879.38202, 859.39238, 887.44554, 885.42966, 885.42966, 881.3979, 879.38202, 859.39238, 887.44554, 885.42966, 885.42966, 881.3979, 879.38202, 859.39238, 887.44554, 885.42966, 885.42966, 881.3979, 879.38202, 536.87264, 584.86964, 536.87264, 584.86964, 568.87064, 600.86864, 600.86864, 568.87064, 268.43632, 89.09238, 150.1279, 175.2081, 175.11378, 132.09314, 121.15738, 146.1433, 129.13636, 155.15376, 131.17212, 131.17212, 147.1947, 410.67454, 165.18834, 115.12966, 105.09138, 119.11796, 204.22438, 181.18734, 117.14554, 479.118966, 519.143066, 480.103326, 59.04322, 87.09638, 73.0698];

%x is the group to be converted into FBA-input values which can go into the
%model .S martix

%s is the option used for the function. If s='ff' then the function will
%substitute straight into the model.S matrix, whereas if the s='end' the
%model will return the output values

expectation=x;

FType=convertCharsToStrings(FType);

load staticCoefs.mat

dnaExpectation=staticCoefs(1,1);
glycerolExpectation=staticCoefs(1,2);
rnaExpectation=staticCoefs(1,3);
vfaExpectation=staticCoefs(1,4);

%global model
mr=@(x)(Mr(1,x)/1000);

if strcmp(s,'ff')==1
    for i=1:length(metIds)
            if i<=4
                %Carbohydrates
                model.S(metIds(1,i),62)=(expectation(1,1)*aOverSigmaA(1,i))/mr(i);
            elseif i==5
                %Chlorophyl A
                model.S(metIds(1,i),62)=(expectation(1,2)*aOverSigmaA(1,i))/mr(i);
            elseif i==6
                %Chlorophyl B
                model.S(metIds(1,i),62)=(expectation(1,3)*aOverSigmaA(1,i))/mr(i);
            elseif i <=10 && i>6
                %DNA
                model.S(metIds(1,i),62)=(dnaExpectation*aOverSigmaA(1,i))/mr(i);
            elseif i==11
                %Glycerol
                model.S(metIds(1,i),62)=(glycerolExpectation*aOverSigmaA(1,i))/mr(i);
            elseif i<=136 && i>11
                %Lipids
                model.S(metIds(1,i),62)=(expectation(1,4)*aOverSigmaA(1,i))/mr(i);
            elseif i<=144 && i>136
                %Xanthophills
                model.S(metIds(1,i),62)=(expectation(1,5)*aOverSigmaA(1,i))/mr(i);
            elseif i<=165 && i>144
                %Protein
                model.S(metIds(1,i),62)=(expectation(1,6)*aOverSigmaA(1,i))/mr(i);
            elseif i<=168 && i>165
                %RNA
                model.S(metIds(1,i),62)=(rnaExpectation*aOverSigmaA(1,i))/mr(i);
            elseif i<=171 && i>168
                %VFA
                model.S(metIds(1,i),62)=(vfaExpectation*aOverSigmaA(1,i))/mr(i);
            end
    end
    y=model;
elseif strcmp(s,'end')==1 
    for i=1:length(metIds)
            if i<=4
                %Carbohydrates
                y(1,i)=(expectation(1,1)*aOverSigmaA(1,i))/mr(i);
            elseif i==5
                %Chlorophyl A
                y(1,i)=(expectation(1,2)*aOverSigmaA(1,i))/mr(i);
            elseif i==6
                %Chlorophyl B
                y(1,i)=(expectation(1,3)*aOverSigmaA(1,i))/mr(i);
            elseif i <=10 && i>6
                %DNA
                y(1,i)=(dnaExpectation*aOverSigmaA(1,i))/mr(i);
            elseif i==11
                %Glycerol
                y(1,i)=(glycerolExpectation*aOverSigmaA(1,i))/mr(i);
            elseif i<=136 && i>11
                %Lipids
                y(1,i)=(expectation(1,4)*aOverSigmaA(1,i))/mr(i);
            elseif i<=144 && i>136
                %Xanthophills
                y(1,i)=(expectation(1,5)*aOverSigmaA(1,i))/mr(i);
            elseif i<=165 && i>144
                %Protein
                y(1,i)=(expectation(1,6)*aOverSigmaA(1,i))/mr(i);
            elseif i<=168 && i>165
                %RNA
                y(1,i)=(rnaExpectation*aOverSigmaA(1,i))/mr(i);
            elseif i<=171 && i>168
                %VFA
                y(1,i)=(vfaExpectation*aOverSigmaA(1,i))/mr(i);
            end
    end
end
end